import type { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { ChevronRight } from "react-feather";

import {
    siGithub,
    siTwitter,
    siStackoverflow,
    siMedium,
    siUnsplash,
} from "simple-icons/icons";
import CreationCard from "../components/CreationCardLinked";
import type { Creation } from "../types/creations";

const socialIcons = [
    { url: "https://github.com/hkamran80", icon: siGithub },
    { url: "https://twitter.com/hkamran80", icon: siTwitter },
    {
        url: "https://stackoverflow.com/users/7313822/h-kamran",
        icon: siStackoverflow,
    },
    { url: "https://hkamran.medium.com", icon: siMedium },
    { url: "https://unsplash.com/@hkamran", icon: siUnsplash },
];

// @ts-ignore
const Home: NextPage = ({ creations }) => {
    return (
        <div>
            <Head>
                <title>H. Kamran</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="py-20 px-12 md:px-40 items-center justify-center space-y-8 max-w-7xl mx-auto">
                <section className="space-y-7">
                    <div className="space-y-3">
                        <h1 className="text-5xl sm:text-6xl font-bold">
                            H. Kamran
                        </h1>
                        <h2 className="text-3xl sm:text-4xl font-semibold">
                            Developer
                        </h2>
                    </div>

                    <div className="flex flex-row space-x-7">
                        {socialIcons.map(({ url, icon }, index) => (
                            <a
                                key={index}
                                href={url}
                                aria-label={icon.title}
                                target="_blank"
                                rel="noopener noreferrer"
                            >
                                <svg
                                    role="img"
                                    viewBox="0 0 24 24"
                                    xmlns="http://www.w3.org/2000/svg"
                                    className="fill-white hover:fill-pink-700 transition-colors duration-300 w-6 h-6"
                                >
                                    <title>{icon.title}</title>
                                    <path d={icon.path} />
                                </svg>
                            </a>
                        ))}
                    </div>

                    <div className="text-2xl font-light leading-normal space-y-3">
                        <p>
                            Iâ€™m experienced with Python, JavaScript, TypeScript,
                            Vue.js, Java, Kotlin, Swift, and SwiftUI
                        </p>

                        <p>
                            I also write articles on topics that interest me and
                            that seem useful, as well as occasionally taking
                            photos
                        </p>
                    </div>
                </section>

                <section className="space-y-5">
                    <div className="space-y-3">
                        <Link href="/articles" passHref>
                            <span className="text-2xl font-semibold hover:cursor-pointer flex items-center">
                                <span className="flex-1">Articles</span>
                                <ChevronRight />
                            </span>
                        </Link>

                        <div className="p-6 bg-hk-grey hover:bg-hk-grey-hover transition-colors duration-300 rounded-lg flex flex-col space-y-1">
                            <span className="text-lg">
                                Dark Mode Toggle for Vue.js Apps with Vuetify
                            </span>
                            <span className="font-light">
                                Here&apos;s a simple way to set Vuetify&apos;s
                                dark mode state and make it user-changeable
                            </span>
                            <time className="font-extralight">
                                June 4, 2020
                            </time>
                        </div>

                        <Link href="/articles" passHref>
                            <div className="ring-2 ring-hk-grey hover:ring-pink-700 rounded-lg flex items-center justify-center py-2 transition duration-300">
                                <span className="text-[#b0b0b0]">More</span>
                            </div>
                        </Link>
                    </div>

                    <div className="space-y-3">
                        <Link href="/showcase" passHref>
                            <span className="text-2xl font-semibold hover:cursor-pointer flex items-center">
                                <span className="flex-1">Showcase</span>
                                <ChevronRight />
                            </span>
                        </Link>

                        <div className="grid grid-cols-1 xl:grid-cols-2 gap-4">
                            {(creations as Creation[])
                                .filter(({ featured }) => featured)
                                .sort(
                                    (
                                        { name: rawNameA },
                                        { name: rawNameB },
                                    ) => {
                                        const nameA = rawNameA.toLowerCase(),
                                            nameB = rawNameB.toLowerCase();

                                        return nameA < nameB
                                            ? -1
                                            : nameA > nameB
                                            ? 1
                                            : 0;
                                    },
                                )
                                .map((creation, index) => (
                                    <CreationCard
                                        key={index}
                                        creation={creation}
                                    />
                                ))}

                            {(creations as Creation[]).filter(
                                ({ featured }) => featured === true,
                            ).length < 4 && (
                                <Link href="/showcase" passHref>
                                    <div className="ring-2 ring-hk-grey hover:ring-pink-700 rounded-lg flex items-center justify-center py-6 transition duration-300">
                                        <span className="text-[#b0b0b0] text-lg">
                                            More
                                        </span>
                                    </div>
                                </Link>
                            )}
                        </div>
                    </div>
                </section>
            </main>
        </div>
    );
};

export async function getStaticProps() {
    const creations = (await (
        await fetch("https://raw.hkamran.com/hkamran/creations")
    ).json()) as Creation[];
    return { props: { creations } };
}

export default Home;
